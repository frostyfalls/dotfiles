" File: vimrc
" Maintainer: frosty <passedgoandgot200@disroot.org>
"
" vim:sts=2:sw=2:et

if &compatible
  set nocompatible
endif
filetype plugin indent on
syntax enable

set runtimepath^=$XDG_CONFIG_HOME/vim
set runtimepath+=$XDG_DATA_HOME/vim
set runtimepath+=$XDG_CONFIG_HOME/vim/after

set packpath^=$XDG_DATA_HOME/vim,$XDG_CONFIG_HOME/vim
set packpath+=$XDG_CONFIG_HOME/vim/after,$XDG_DATA_HOME/vim/after

let g:netrw_home = $XDG_DATA_HOME . '/vim'
call mkdir($XDG_DATA_HOME . '/vim/spell', 'p')

set backupdir=$XDG_STATE_HOME/vim/backup | call mkdir(&backupdir, 'p')
set directory=$XDG_STATE_HOME/vim/swap   | call mkdir(&directory, 'p')
set undodir=$XDG_STATE_HOME/vim/undo     | call mkdir(&undodir, 'p')
set viewdir=$XDG_STATE_HOME/vim/view     | call mkdir(&viewdir, 'p')

set viminfofile=$XDG_STATE_HOME/vim/viminfo

packadd minpac
if exists('g:loaded_minpac')
  call minpac#init()
  call minpac#add('k-takata/minpac', {'type': 'opt'})
  call minpac#add('tpope/vim-commentary')
  call minpac#add('lifepillar/vim-mucomplete')

  command! PackUpdate call minpac#update()
  command! PackClean  call minpac#clean()
  command! PackStatus call minpac#status()
endif

augroup CustomizeColorScheme
  autocmd!
  autocmd VimEnter,ColorScheme * highlight Normal ctermbg=NONE guibg=NONE
augroup END
silent! colorscheme habamax

set number
set relativenumber
set laststatus=2
set splitbelow
set splitright

set completeopt=menu,menuone,noselect
set shortmess+=c
inoremap <expr> <CR> pumvisible() ? '<C-y><CR>' : '<CR>'

let g:mucomplete#enable_auto_at_startup = v:true
let g:mucomplete#no_mappings = v:true
