#!/bin/sh

OUTPUT="$HOME/videos/recordings/$(date +%F_%H-%M-%S)"

SELECTION=""

die() {
    printf '%s: %s\n' "${0##*/}" "$1"
    exit 1
}

while getopts :sg opt; do
    case "$opt" in
    s) SELECTION=1 ;;
    g) GIF=1 ;;
    *) die "invalid option: -$OPTARG" ;;
    esac
done

shift $((OPTIND - 1))

[ -n "$GIF" ] && OUTPUT="$OUTPUT.gif" || OUTPUT="$OUTPUT.mkv"

coords=$(mktemp)
if [ -n "$SELECTION" ]; then
    slop -f "%x %y %w %h" >"$coords" || exit 0
    read -r x y w h <"$coords"
else
    x=0
    y=0
    xwininfo -root | awk '/Width:/{width = $2}; /Height:/{height = $2}; END {print width, height}' >"$coords"
    read -r w h <"$coords"
fi

recording=$(mktemp -u XXXXXX.mkv)
ffmpeg -f x11grab -s "$w"x"$h" -i :0.0+"$x","$y" -r 30 -preset ultrafast "$recording" >/dev/null 2>&1

if [ -z "$GIF" ]; then
    mv "$recording" "$OUTPUT"
    notify-send "${0##*/}" "Recording complete"
else
    notify-send "${0##*/}" "Recording complete, encoding to GIF..."

    ffmpeg -y -i "$recording" -vf palettegen /tmp/palette.png >/dev/null 2>&1
    ffmpeg -i "$recording" -i /tmp/palette.png -filter_complex paletteuse "$OUTPUT" >/dev/null 2>&1
    notify-send "${0##*/}" "Encoding complete"
fi

printf '%s\n' "$OUTPUT"

rm -f "$coords"
rm -f "$recording"
